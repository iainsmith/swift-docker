#if !canImport(ObjectiveC)
import XCTest

extension BuiildCommandUnitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BuiildCommandUnitTests = [
        ("testSuccessfullBuild", testSuccessfullBuild),
    ]
}

extension CLIOptionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CLIOptionTests = [
        ("testCustomAbsolutePath", testCustomAbsolutePath),
        ("testCustomImage", testCustomImage),
        ("testCustomSwiftVersion", testCustomSwiftVersion),
        ("testCustomTildaPath", testCustomTildaPath),
        ("testDefaultDockerTag", testDefaultDockerTag),
        ("testDirectoryMustContainAPackageSwiftFile", testDirectoryMustContainAPackageSwiftFile),
        ("testProjectName", testProjectName),
        ("testRelativePath", testRelativePath),
        ("testValidatesSwiftAndImageAreExclusive", testValidatesSwiftAndImageAreExclusive),
    ]
}

extension CleanupCommandUnitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CleanupCommandUnitTests = [
        ("testDeletingOneImage", testDeletingOneImage),
        ("testForceDeletingOneImage", testForceDeletingOneImage),
        ("testNoImagesToCleanup", testNoImagesToCleanup),
    ]
}

extension DockerImageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DockerImageTests = [
        ("testInitailizationPrecedence", testInitailizationPrecedence),
        ("testInitailizedWithEmptyImage", testInitailizedWithEmptyImage),
        ("testInitailizedWithImage", testInitailizedWithImage),
        ("testInitailizedWithVersion", testInitailizedWithVersion),
    ]
}

extension TestCommandUnitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TestCommandUnitTests = [
        ("testSuccessfullBuildAndTest", testSuccessfullBuildAndTest),
    ]
}

extension URLArgumentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__URLArgumentTests = [
        ("testRelativePathResolution", testRelativePathResolution),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BuiildCommandUnitTests.__allTests__BuiildCommandUnitTests),
        testCase(CLIOptionTests.__allTests__CLIOptionTests),
        testCase(CleanupCommandUnitTests.__allTests__CleanupCommandUnitTests),
        testCase(DockerImageTests.__allTests__DockerImageTests),
        testCase(TestCommandUnitTests.__allTests__TestCommandUnitTests),
        testCase(URLArgumentTests.__allTests__URLArgumentTests),
    ]
}
#endif
